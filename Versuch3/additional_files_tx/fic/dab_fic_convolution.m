%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FIC/dab_fic_convolution.m                                               %
%                                                                         %
% Requires: - FIC_disp (matrix)                                           %
%           - tre (struct)                                                %
%           - punct_vectors (matrix)                                      %
%           - punct_trail (vector)                                        %
%                                                                         %
% Returns:  - FIC_conv (matrix)                                           %
%-------------------------------------------------------------------------%
% This function performs the convolutional coding as well as the          %
% puncturing for the FIC.                                                 %
% For the dispearsed FIC (FIC_disp) input each row has to contain 3 FIBs  %
% with 256 bits each --> 768 bits per row.  The number of rows has to be  %
% a multiple of 4 for Transmission Mode 1, any integer number for         %
% Transmission Mode 2 and a multiple of 2 for transmission mode 4.        %
%                                                                         %
% The variable punct_vectors contains all puncturing vectors defined for  %
% DAB. Only two of them are necessary in order to perform convolutional   %
% coding for the FIC                                                      %
%                                                                         %
% Variable punct_tail contains the puncturing vector for the 24 tail bits %
%                                                                         %
% Variable tre is a struct generated by matlab for a convolutional coder  %
% with seven states and 4 outputs with the octal forms 133, 171, 145 and  %
% 133.  MATLAB: tre = poly2trellis(7, [133 171 145 133]);                 % 
%                                                                         %
% The output is the convoluted FIB matrix with the same number of rows as %
% the input, but with 2304 bits in each row (compared to 768 bits for the %
% input rows)                                                             %
%-------------------------------------------------------------------------%
% TRANSMISSION MODE 3 CANNOT BE CONVOLUTED WITH THIS FUNCTION             %
%-------------------------------------------------------------------------%
% MASTER THESIS: CHRISTOPHER TSCHISCHKA                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function FIC_conv = dab_fic_convolution(FIC_disp, tre, punct_vectors, punct_tail)


    rowsize = 2304;
    
    
    %% Convolutional Coding for the FIC
    % Expand input matrix by 6 
    conv_in = [FIC_disp, false(size(FIC_disp,1),6)];
    
    % preallocation of convoluted mother matrix
    conv_mother_matrix = false(size(FIC_disp,1),4*(size(FIC_disp,2)+6));  
    
    % Apply convolution for every row
    for i = 1 : size(FIC_disp,1)
        conv_mother_matrix(i,:) = convenc(conv_in(i,:), tre);       
    end

    %% Puncturing the convolutional coded mother matrix
    % Create puncturing vector according to the DAB standard
    punct_vect = [repmat(punct_vectors(16,:),1,4*21) repmat(punct_vectors(15,:),1,4*3) punct_tail];
    
    % Preallocate output matrix
    FIC_conv = false(size(FIC_disp,1),rowsize);
    
    % Perform puncturing for every row of the convolution coded mother matrix
    for i = 1 : size(FIC_disp,1)
        FIC_conv(i,:) = conv_mother_matrix(i,punct_vect);                     
    end
    
end